/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "bool",
                name: "isExample",
                type: "bool",
            },
        ],
        name: "isExample",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b5060ac8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b49a6f5c14602d575b600080fd5b603b6038366004604f565b90565b604051901515815260200160405180910390f35b600060208284031215606057600080fd5b81358015158114606f57600080fd5b939250505056fea2646970667358221220da1fff60ffdb09d93570bc575a9ec975e493c6ad30514723acdc8f6657c9189c64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
export class Example__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
Example__factory.bytecode = _bytecode;
Example__factory.abi = _abi;
